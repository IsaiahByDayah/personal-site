// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for About Page documents */
interface AboutPageDocumentData {
    /**
     * Slice Zone field in *About Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: about-page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<AboutPageDocumentDataSlicesSlice>;
}
/**
 * Slice for *About Page → Slice Zone*
 *
 */
type AboutPageDocumentDataSlicesSlice = RichTextSlice | QuoteSlice;
/**
 * About Page document from Prismic
 *
 * - **API ID**: `about-page`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AboutPageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<AboutPageDocumentData>, "about-page", Lang>;
/** Content for Blog Post documents */
interface BlogPostDocumentData {
    /**
     * thumbnail field in *Blog Post*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.thumbnail
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    thumbnail: prismicT.ImageField<never>;
    /**
     * title field in *Blog Post*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * excerpt field in *Blog Post*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.excerpt
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    excerpt: prismicT.KeyTextField;
    /**
     * tags field in *Blog Post*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.tags[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    tags: prismicT.GroupField<Simplify<BlogPostDocumentDataTagsItem>>;
    /**
     * projects field in *Blog Post*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.projects[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    projects: prismicT.GroupField<Simplify<BlogPostDocumentDataProjectsItem>>;
    /**
     * Slice Zone field in *Blog Post*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<BlogPostDocumentDataSlicesSlice>;
}
/**
 * Item in Blog Post → tags
 *
 */
export interface BlogPostDocumentDataTagsItem {
    /**
     * tag field in *Blog Post → tags*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.tags[].tag
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    tag: prismicT.RelationField<"tag">;
}
/**
 * Item in Blog Post → projects
 *
 */
export interface BlogPostDocumentDataProjectsItem {
    /**
     * project field in *Blog Post → projects*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: blog-post.projects[].project
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    project: prismicT.RelationField<"project">;
}
/**
 * Slice for *Blog Post → Slice Zone*
 *
 */
type BlogPostDocumentDataSlicesSlice = RichTextSlice | QuoteSlice;
/**
 * Blog Post document from Prismic
 *
 * - **API ID**: `blog-post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<BlogPostDocumentData>, "blog-post", Lang>;
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * dummy field in *Homepage*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: homepage.dummy
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    dummy: prismicT.BooleanField;
}
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for Project documents */
interface ProjectDocumentData {
    /**
     * image field in *Project*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: project.image
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * title field in *Project*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * summary field in *Project*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.summary
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    summary: prismicT.KeyTextField;
    /**
     * url field in *Project*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: project.url
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    url: prismicT.LinkField;
    /**
     * description field in *Project*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * highlights field in *Project*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: project.highlights[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    highlights: prismicT.GroupField<Simplify<ProjectDocumentDataHighlightsItem>>;
    /**
     * tags field in *Project*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: project.tags[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    tags: prismicT.GroupField<Simplify<ProjectDocumentDataTagsItem>>;
    /**
     * client field in *Project*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: project.client[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    client: prismicT.GroupField<Simplify<ProjectDocumentDataClientItem>>;
}
/**
 * Item in Project → highlights
 *
 */
export interface ProjectDocumentDataHighlightsItem {
    /**
     * highlight field in *Project → highlights*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.highlights[].highlight
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    highlight: prismicT.RichTextField;
}
/**
 * Item in Project → tags
 *
 */
export interface ProjectDocumentDataTagsItem {
    /**
     * tag field in *Project → tags*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: project.tags[].tag
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    tag: prismicT.RelationField<"tag">;
}
/**
 * Item in Project → client
 *
 */
export interface ProjectDocumentDataClientItem {
    /**
     * name field in *Project → client*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.client[].name
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    name: prismicT.KeyTextField;
    /**
     * site field in *Project → client*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: project.client[].site
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    site: prismicT.LinkField;
    /**
     * photo field in *Project → client*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: project.client[].photo
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    photo: prismicT.ImageField<never>;
    /**
     * bio field in *Project → client*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.client[].bio
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    bio: prismicT.RichTextField;
}
/**
 * Project document from Prismic
 *
 * - **API ID**: `project`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<ProjectDocumentData>, "project", Lang>;
/** Content for Tag documents */
interface TagDocumentData {
    /**
     * name field in *Tag*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: tag.name
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    name: prismicT.KeyTextField;
    /**
     * description field in *Tag*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: tag.description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Tag document from Prismic
 *
 * - **API ID**: `tag`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TagDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<TagDocumentData>, "tag", Lang>;
export type AllDocumentTypes = AboutPageDocument | BlogPostDocument | HomepageDocument | ProjectDocument | TagDocument;
/**
 * Primary content in Quote → Primary
 *
 */
interface QuoteSliceDefaultSlicePrimary {
    /**
     * content field in *Quote → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: quote.primary.content
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    content: prismicT.KeyTextField;
}
/**
 * Default slice variation for Quote Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuoteSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<QuoteSliceDefaultSlicePrimary>, never>;
/**
 * Slice variation for *Quote*
 *
 */
type QuoteSliceVariation = QuoteSliceDefaultSlice;
/**
 * Quote Shared Slice
 *
 * - **API ID**: `quote`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuoteSlice = prismicT.SharedSlice<"quote", QuoteSliceVariation>;
/**
 * Primary content in RichText → Primary
 *
 */
interface RichTextSliceDefaultSlicePrimary {
    /**
     * content field in *RichText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Lorem ipsum dolor sit amet...
     * - **API ID Path**: rich_text.primary.content
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    content: prismicT.RichTextField;
}
/**
 * Default slice variation for RichText Slice
 *
 * - **API ID**: `default-slice`
 * - **Description**: `RichText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type RichTextSliceDefaultSlice = prismicT.SharedSliceVariation<"default-slice", Simplify<RichTextSliceDefaultSlicePrimary>, never>;
/**
 * Slice variation for *RichText*
 *
 */
type RichTextSliceVariation = RichTextSliceDefaultSlice;
/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: `RichText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type RichTextSlice = prismicT.SharedSlice<"rich_text", RichTextSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { AboutPageDocumentData, AboutPageDocumentDataSlicesSlice, AboutPageDocument, BlogPostDocumentData, BlogPostDocumentDataTagsItem, BlogPostDocumentDataProjectsItem, BlogPostDocumentDataSlicesSlice, BlogPostDocument, HomepageDocumentData, HomepageDocument, ProjectDocumentData, ProjectDocumentDataHighlightsItem, ProjectDocumentDataTagsItem, ProjectDocumentDataClientItem, ProjectDocument, TagDocumentData, TagDocument, AllDocumentTypes, QuoteSliceDefaultSlicePrimary, QuoteSliceDefaultSlice, QuoteSliceVariation, QuoteSlice, RichTextSliceDefaultSlicePrimary, RichTextSliceDefaultSlice, RichTextSliceVariation, RichTextSlice };
    }
}
